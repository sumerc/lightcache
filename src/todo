v0.1
--------
[+] in need of some protocol message to set some core settings dynamically. This is very useful for testing purposes.
    CHG_SETTING <setting_name> <setting_value>
[+] jemalloc is a dependency from now on. maybe disable it by a flag later.
[*] response structure which should be a linked list and a header in it.
[+] STATS command.
[+] TEST idle_client working with SET_SETTING in tests.
[+] YES IT IS ABLE TO.check if valgrind is able to detect offbyone errors buffer overruns? if not
	check for buffer overrruns. 
[+] exclude log.c.
[+] some kind of freelist for basic structures. (exponantially growing)
[+] move the headers to lightcache.h
[+] network byte ordering for response/request objects and python tests also should include endianness.
	python struct module directly writes integers without respect to the endianness. use htonl() before
	sending and nhtonl() after receiving data for integers. Strings, obviously are same. 8-bit integers
	are agreed to be the smallest byte size on C, so endianness do not affect these, obviously.
[+] prepare_response should accept a param with allocate_bytes for allocating the sdata array.
[+] AFAIU, memcache uses strtoull() and ntohll() for 64 bit and strtoul() and ntohl() for 32 bit integers.
	so, just decide which to use.
[+] send invalid/boundary integers for GET, CHG_SETTING, GET(...) functions shall return None on error.
	server generally disconnects in invalid situations.
[+] kqueue integration.
[+] use predefined macros to compile lightcache. Use only makefile like redis.
[+] fprintf(xxx)'s should end with \r\n.
[+] kqueue pass TESTS. Getting broken pipe errors on some occasions.
[-] refactor/optimize kqueue. Before refactoring write a test for epoll that sends subsequent packets before receiving data
	to see what happens and use that info to refactor kqueue. IMHO, if event_set() is called with EVENT_READ then this should
    be the only	event registered in the pollfd, others shall be discarded.Verify that assumption with epoll and integrate same
	logic with kqueue.
v0.2
---------
[*] TOO HARD from now on and memcached is also not doing like this.Subsequent read/write should be possible at the same time.
    and i don't expect any valid use case for this requirement. If you see one write here.
[-] test_protocol suite failing when run in remote. send_overflow_data is not returning from assertDisconnect() 
    somehow when lightcache is run remotely. Remote system is CentOS 64 bit.
[-] use HHASH algorithm same as memcached. Bob Jenkins is the expert there:)
[-] Program received signal SIGFPE, Arithmetic exception. disable this. 
	if ( (stats.mem_used * 100 / settings.mem_avail) > LIGHTCACHE_GARBAGE_COLLECT_RATIO_THRESHOLD)	
[-] req per sec/sent per sec stats, and total sent/received stats.
[-] GET_MANY after all of above is working.
[-] implement unix domain sockets.
[-] more tests & more tests.
